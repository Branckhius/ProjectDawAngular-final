{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(httpClient, apiUrl) {\n    this.httpClient = httpClient;\n    this.apiUrl = apiUrl;\n  }\n  getData(type) {\n    return this.httpClient.get(`${this.apiUrl}api/${type}`);\n  }\n  addData(type, newData) {\n    return this.httpClient.post(`${this.apiUrl}api/${type}`, newData);\n  }\n  get(path, params = {}) {\n    return this.httpClient.get(`${this.apiUrl}${path}`, {\n      params\n    });\n  }\n  put(path, body = {}) {\n    return this.httpClient.put(`${this.apiUrl}${path}`, body);\n  }\n  post(path, body = {}) {\n    return this.httpClient.post(`${this.apiUrl}${path}`, body);\n  }\n  delete(path) {\n    return this.httpClient.delete(`${this.apiUrl}${path}`);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,UAAU;EAGrBC,YAA6BC,UAAsB,EAAsBC,MAAc;IAA1D,eAAU,GAAVD,UAAU;IACrC,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;EACAC,OAAO,CAACC,IAAY;IAClB,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACH,MAAM,OAAOE,IAAI,EAAE,CAAC;EAChE;EAEAE,OAAO,CAACF,IAAY,EAAEG,OAAY;IAChC,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAQ,GAAG,IAAI,CAACN,MAAM,OAAOE,IAAI,EAAE,EAAEG,OAAO,CAAC;EAC1E;EAEAF,GAAG,CAAII,IAAY,EAAEC,MAAM,GAAG,EAAE;IAC9B,OAAO,IAAI,CAACT,UAAU,CAACI,GAAG,CAAI,GAAG,IAAI,CAACH,MAAM,GAAGO,IAAI,EAAE,EAAE;MAAEC;IAAM,CAAE,CAAC;EACpE;EAEAC,GAAG,CAAIF,IAAY,EAAEG,IAAI,GAAG,EAAE;IAC5B,OAAO,IAAI,CAACX,UAAU,CAACU,GAAG,CAAI,GAAG,IAAI,CAACT,MAAM,GAAGO,IAAI,EAAE,EAAEG,IAAI,CAAC;EAC9D;EAEAJ,IAAI,CAAIC,IAAY,EAAEG,IAAI,GAAG,EAAE;IAC7B,OAAO,IAAI,CAACX,UAAU,CAACO,IAAI,CAAI,GAAG,IAAI,CAACN,MAAM,GAAGO,IAAI,EAAE,EAAEG,IAAI,CAAC;EAC/D;EAEAC,MAAM,CAAIJ,IAAY;IACpB,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAI,GAAG,IAAI,CAACX,MAAM,GAAGO,IAAI,EAAE,CAAC;EAC3D;;AA5BWV,UAAU;mBAAVA,UAAU,0CAGwC,UAAU;AAAA;AAH5DA,UAAU;SAAVA,UAAU;EAAAe,SAAVf,UAAU;EAAAgB,YAFT;AAAM","names":["ApiService","constructor","httpClient","apiUrl","getData","type","get","addData","newData","post","path","params","put","body","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\proiectDAW\\ProjectDawAngular-part3-2\\ProjectDawAngular\\ProjectDawAngular\\ClientApp\\src\\app\\core\\services\\api.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly apiUrl: string;\n\n  constructor(private readonly httpClient: HttpClient, @Inject('BASE_URL') apiUrl: string) {\n    this.apiUrl = apiUrl;\n  }\n  getData(type: string): Observable<any[]> {\n    return this.httpClient.get<any[]>(`${this.apiUrl}api/${type}`);\n  }\n\n  addData(type: string, newData: any): Observable<any[]> {\n    return this.httpClient.post<any[]>(`${this.apiUrl}api/${type}`, newData);\n  }\n\n  get<T>(path: string, params = {}): Observable<any> {\n    return this.httpClient.get<T>(`${this.apiUrl}${path}`, { params });\n  }\n\n  put<T>(path: string, body = {}): Observable<any> {\n    return this.httpClient.put<T>(`${this.apiUrl}${path}`, body);\n  }\n\n  post<T>(path: string, body = {}): Observable<any> {\n    return this.httpClient.post<T>(`${this.apiUrl}${path}`, body);\n  }\n\n  delete<T>(path: string): Observable<any> {\n    return this.httpClient.delete<T>(`${this.apiUrl}${path}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}