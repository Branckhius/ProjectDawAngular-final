{"ast":null,"code":"import { ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../core/services/authentication.service\";\nexport class RegisterComponent {\n  constructor(formBuilder, authenticationService) {\n    this.formBuilder = formBuilder;\n    this.authenticationService = authenticationService;\n    this.registerForm = this.formBuilder.group({\n      userName: ['', Validators.required],\n      email: ['', Validators.email],\n      password: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required]\n    });\n  }\n  register() {\n    this.authenticationService.register(this.registerForm.value).subscribe(data => console.log(data));\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthenticationService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 10,\n  vars: 1,\n  consts: [[3, \"formGroup\"], [\"formControlName\", \"userName\", \"placeholder\", \"Username\", \"type\", \"text\"], [\"formControlName\", \"email\", \"placeholder\", \"Email\", \"type\", \"text\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", \"type\", \"password\"], [3, \"click\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n      i0.ɵɵtext(2, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵelement(4, \"input\", 1)(5, \"input\", 2)(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\")(8, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_8_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵtext(9, \" Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n    }\n  },\n  dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAA6CA,mBAAmB,EAAEC,UAAU,QAAO,gBAAgB;;;;AAUnG,OAAM,MAAOC,iBAAiB;EAS5BC,YAA6BC,WAAwB,EACxBC,qBAA4C;IAD5C,gBAAW,GAAXD,WAAW;IACX,0BAAqB,GAArBC,qBAAqB;IATlD,iBAAY,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MACnCC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACQ,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACO,QAAQ,CAAC;MACnCG,SAAS,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACO,QAAQ,CAAC;MACpCI,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACO,QAAQ;KACnC,CAAC;EAIF;EAEAK,QAAQ;IACJ,IAAI,CAACR,qBAAqB,CAACQ,QAAQ,CAAC,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC,CACzDC,SAAS,CAAEC,IAAQ,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;EACjD;;AAhBWf,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BC,2BAAK;MACAA,wBAAQ;MAAAA,iBAAI;MACfA,+BAAiC;MAC/BA,2BAAqE;MAGvEA,iBAAO;MACPA,2BAAK;MACKA;QAAA,OAASC,cAAU;MAAA,EAAC;MAAED,uBAAM;MAAAA,iBAAS;;;MANzCA,eAA0B;MAA1BA,4CAA0B;;;iBDKtB3B,mBAAmB;EAAA6B;AAAA","names":["ReactiveFormsModule","Validators","RegisterComponent","constructor","formBuilder","authenticationService","group","userName","required","email","password","firstName","lastName","register","registerForm","value","subscribe","data","console","log","selectors","standalone","features","decls","vars","consts","template","i0","ctx","styles"],"sourceRoot":"","sources":["D:\\proiectDAW\\ProjectDawAngular-part3-2\\ProjectDawAngular\\ProjectDawAngular\\ClientApp\\src\\app\\reactive-forms\\register\\register.component.ts","D:\\proiectDAW\\ProjectDawAngular-part3-2\\ProjectDawAngular\\ProjectDawAngular\\ClientApp\\src\\app\\reactive-forms\\register\\register.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport { AuthenticationService } from '../../core/services/authentication.service';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  registerForm = this.formBuilder.group({\n    userName: ['', Validators.required],\n    email: ['', Validators.email],\n    password: ['', Validators.required],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n  });\n\n  constructor(private readonly formBuilder: FormBuilder,\n              private readonly authenticationService: AuthenticationService) {\n  }\n\n  register() {\n      this.authenticationService.register(this.registerForm.value)\n        .subscribe((data:any) => console.log(data));\n  }\n\n}\n","<div>\n  <p>Register</p>\n  <form [formGroup]=\"registerForm\">\n    <input formControlName=\"userName\" placeholder=\"Username\" type=\"text\">\n    <input formControlName=\"email\" placeholder=\"Email\" type=\"text\">\n    <input formControlName=\"password\" placeholder=\"Password\" type=\"password\">\n  </form>\n  <div>\n    <button (click)=\"register()\"> Submit</button>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}