{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/authentication.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authenticationService, router) {\n    this.authenticationService = authenticationService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    console.log('canActivate called');\n    if (this.authenticationService.isLoggedIn()) {\n      console.log('User is logged in.');\n      return true;\n    } else {\n      console.log('User is not logged in. Redirecting to login page.');\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAA6BC,qBAA4C,EAC5CC,MAAc;IADd,0BAAqB,GAArBD,qBAAqB;IACrB,WAAM,GAANC,MAAM;EACnC;EAEAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IAEjC,IAAI,IAAI,CAACN,qBAAqB,CAACO,UAAU,EAAE,EAAE;MAC3CF,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,OAAO,IAAI;KACZ,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;MAChE,IAAI,CAACL,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;AAnBWV,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAW,SAATX,SAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","authenticationService","router","canActivate","route","state","console","log","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["D:\\proiectDAW\\ProjectDawAngular-part3-2\\ProjectDawAngular\\ProjectDawAngular\\ClientApp\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from \"../services/authentication.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private readonly authenticationService: AuthenticationService,\n              private readonly router: Router) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    console.log('canActivate called');\n\n    if (this.authenticationService.isLoggedIn()) {\n      console.log('User is logged in.');\n      return true;\n    } else {\n      console.log('User is not logged in. Redirecting to login page.');\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}