{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../core/pipes/demo.pipe\";\nfunction AfisareCreareDateComponent_div_14_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const property_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(property_r4);\n  }\n}\nfunction AfisareCreareDateComponent_div_14_tr_10_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const property_r8 = ctx.$implicit;\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r5[property_r8]);\n  }\n}\nfunction AfisareCreareDateComponent_div_14_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"demo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, AfisareCreareDateComponent_div_14_tr_10_td_4_Template, 2, 1, \"td\", 2);\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function AfisareCreareDateComponent_div_14_tr_10_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const item_r5 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onDeleteData(ctx_r10.selectedType, item_r5.Id));\n    });\n    i0.ɵɵtext(7, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, (i_r6 + 1).toString()));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getProperties(item_r5));\n  }\n}\nfunction AfisareCreareDateComponent_div_14_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function AfisareCreareDateComponent_div_14_div_15_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const property_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.newData[property_r12] = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const property_r12 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", property_r12, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"name\", property_r12);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", property_r12);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.newData[property_r12]);\n  }\n}\nfunction AfisareCreareDateComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"table\")(4, \"thead\")(5, \"tr\")(6, \"th\");\n    i0.ɵɵtext(7, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, AfisareCreareDateComponent_div_14_th_8_Template, 2, 1, \"th\", 2);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, AfisareCreareDateComponent_div_14_tr_10_Template, 8, 4, \"tr\", 2);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\")(12, \"h3\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function AfisareCreareDateComponent_div_14_Template_form_ngSubmit_14_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onAddData());\n    });\n    i0.ɵɵtemplate(15, AfisareCreareDateComponent_div_14_div_15_Template, 4, 4, \"div\", 2);\n    i0.ɵɵelementStart(16, \"button\", 4);\n    i0.ɵɵtext(17, \"Adaug\\u0103\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.selectedType, \":\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getProperties(ctx_r0.data[0]));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.data);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Adaug\\u0103 \", ctx_r0.selectedType, \" nou:\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getProperties(ctx_r0.newData));\n  }\n}\nexport class AfisareCreareDateComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.data = [];\n    this.newData = {};\n    this.newData = {};\n  }\n  onSelectType(type) {\n    this.selectedType = type;\n    // Inițializează obiectul newData cu proprietățile specifice tipului selectat\n    if (type === 'Courses') {\n      this.newData = {\n        Id: 0,\n        Title: '',\n        Credits: 0,\n        ProfessorId: 0\n      }; // Use numeric values for numeric properties\n    } else if (type === 'Departments') {\n      this.newData = {\n        Id: 0,\n        Name: '',\n        Location: ''\n      }; // Corrected properties for Departments\n    } else if (type === 'ProfessorDetails') {\n      this.newData = {\n        Id: 0,\n        OfficeLocation: '',\n        ProfessorId: 0\n      };\n    } else if (type === 'Professors') {\n      this.newData = {\n        Id: 0,\n        Name: '',\n        DepartmentId: 0\n      };\n    } else if (type === 'StudentCourses') {\n      this.newData = {\n        StudentId: 0,\n        CourseId: 0,\n        Id: 0\n      };\n    } else if (type === 'Students') {\n      this.newData = {\n        Id: 0,\n        Name: '',\n        Age: 0\n      };\n    }\n    this.apiService.getData(type).subscribe(data => this.data = data);\n  }\n  onAddData() {\n    console.log('Adding data:', this.newData);\n    this.apiService.addData(this.selectedType, this.newData).subscribe(data => {\n      console.log('Response from API:', data);\n      this.data = data; // Asigură-te că această linie este apelată și că data este actualizată corect\n    }, error => {\n      console.error('Error from API:', error);\n    });\n    this.newData = {};\n  }\n  onDeleteData(type, id) {\n    console.log(`Deleting ${type} with ID: ${id}`);\n    this.apiService.deleteData(type, id).subscribe(data => {\n      console.log('Response from API:', data);\n      this.data = data; // Asigură-te că această linie este apelată și că data este actualizată corect\n    }, error => {\n      console.error('Error from API:', error);\n    });\n  }\n  // Metoda pentru a obține numele proprietăților obiectului newData\n  getProperties(obj) {\n    return obj ? Object.keys(obj) : [];\n  }\n}\nAfisareCreareDateComponent.ɵfac = function AfisareCreareDateComponent_Factory(t) {\n  return new (t || AfisareCreareDateComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\nAfisareCreareDateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AfisareCreareDateComponent,\n  selectors: [[\"app-afisare-creare-date\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"type\", \"submit\"], [3, \"ngModel\", \"name\", \"placeholder\", \"ngModelChange\"]],\n  template: function AfisareCreareDateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"ul\")(2, \"li\", 0);\n      i0.ɵɵlistener(\"click\", function AfisareCreareDateComponent_Template_li_click_2_listener() {\n        return ctx.onSelectType(\"Courses\");\n      });\n      i0.ɵɵtext(3, \"Courses\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"li\", 0);\n      i0.ɵɵlistener(\"click\", function AfisareCreareDateComponent_Template_li_click_4_listener() {\n        return ctx.onSelectType(\"Departments\");\n      });\n      i0.ɵɵtext(5, \"Departments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"li\", 0);\n      i0.ɵɵlistener(\"click\", function AfisareCreareDateComponent_Template_li_click_6_listener() {\n        return ctx.onSelectType(\"ProfessorDetails\");\n      });\n      i0.ɵɵtext(7, \"ProfessorDetails\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"li\", 0);\n      i0.ɵɵlistener(\"click\", function AfisareCreareDateComponent_Template_li_click_8_listener() {\n        return ctx.onSelectType(\"Professors\");\n      });\n      i0.ɵɵtext(9, \"Professors\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"li\", 0);\n      i0.ɵɵlistener(\"click\", function AfisareCreareDateComponent_Template_li_click_10_listener() {\n        return ctx.onSelectType(\"StudentCourses\");\n      });\n      i0.ɵɵtext(11, \"StudentCourses\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"li\", 0);\n      i0.ɵɵlistener(\"click\", function AfisareCreareDateComponent_Template_li_click_12_listener() {\n        return ctx.onSelectType(\"Students\");\n      });\n      i0.ɵɵtext(13, \"Students\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(14, AfisareCreareDateComponent_div_14_Template, 18, 5, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedType);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.DemoPipe],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWZpc2FyZS1jcmVhcmUtZGF0ZS9hZmlzYXJlLWNyZWFyZS1kYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AfisareCreareDateComponent","constructor","apiService","newData","onSelectType","type","selectedType","Id","Title","Credits","ProfessorId","Name","Location","OfficeLocation","DepartmentId","StudentId","CourseId","Age","getData","subscribe","data","onAddData","console","log","addData","error","onDeleteData","id","deleteData","getProperties","obj","Object","keys","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\proiectDAW\\ProjectDawAngular-part3-2\\ProjectDawAngular\\ProjectDawAngular\\ClientApp\\src\\app\\afisare-creare-date\\afisare-creare-date.component.html","D:\\proiectDAW\\ProjectDawAngular-part3-2\\ProjectDawAngular\\ProjectDawAngular\\ClientApp\\src\\app\\afisare-creare-date\\afisare-creare-date.component.ts"],"sourcesContent":["<div>\r\n<ul>\r\n  <li (click)=\"onSelectType('Courses')\">Courses</li>\r\n  <li (click)=\"onSelectType('Departments')\">Departments</li>\r\n  <li (click)=\"onSelectType('ProfessorDetails')\">ProfessorDetails</li>\r\n  <li (click)=\"onSelectType('Professors')\">Professors</li>\r\n  <li (click)=\"onSelectType('StudentCourses')\">StudentCourses</li>\r\n  <li (click)=\"onSelectType('Students')\">Students</li>\r\n</ul>\r\n</div>\r\n\r\n<div *ngIf=\"selectedType\">\r\n  <h2>{{ selectedType }}:</h2>\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>#</th>\r\n        <!-- Utilizarea *ngFor pentru a itera prin proprietățile obiectului newData -->\r\n        <th *ngFor=\"let property of getProperties(data[0])\">{{ property }}</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let item of data; let i = index\">\r\n        <td>{{ (i + 1).toString() | demo }}</td>\r\n        <td *ngFor=\"let property of getProperties(item)\">{{ item[property] }}</td>\r\n        <td>\r\n          <button (click)=\"onDeleteData(selectedType, item.Id)\">Delete</button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  <div>\r\n    <h3>Adaugă {{ selectedType }} nou:</h3>\r\n    <!-- Formular pentru adăugarea de date -->\r\n    <form (ngSubmit)=\"onAddData()\">\r\n      <!-- Utilizarea *ngFor pentru a itera prin proprietățile obiectului newData -->\r\n      <div *ngFor=\"let property of getProperties(newData)\">\r\n        <label>{{ property }}:</label>\r\n        <!-- Adăugarea unui input pentru fiecare proprietate a obiectului newData -->\r\n        <input [(ngModel)]=\"newData[property]\" name=\"{{ property }}\" placeholder=\"{{ property }}\" />\r\n      </div>\r\n\r\n      <!-- Adaugă un buton de tip submit pentru a trimite formularul -->\r\n      <button type=\"submit\">Adaugă</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-afisare-creare-date',\r\n  templateUrl: './afisare-creare-date.component.html',\r\n  styleUrls: ['./afisare-creare-date.component.css']\r\n})\r\nexport class AfisareCreareDateComponent {\r\n  selectedType!: string;\r\n  data: any[] = [];\r\n  newData: any = {};\r\n\r\n  constructor(private apiService: ApiService) {\r\n    this.newData = {};\r\n  }\r\n\r\n  onSelectType(type: string): void {\r\n    this.selectedType = type;\r\n\r\n    // Inițializează obiectul newData cu proprietățile specifice tipului selectat\r\n    if (type === 'Courses') {\r\n      this.newData = { Id: 0, Title: '', Credits: 0, ProfessorId: 0 }; // Use numeric values for numeric properties\r\n    } else if (type === 'Departments') {\r\n      this.newData = { Id: 0, Name: '', Location: '' }; // Corrected properties for Departments\r\n    } else if (type === 'ProfessorDetails') {\r\n      this.newData = { Id: 0, OfficeLocation: '', ProfessorId: 0 };\r\n    } else if (type === 'Professors') {\r\n      this.newData = { Id: 0, Name: '', DepartmentId: 0 };\r\n    } else if (type === 'StudentCourses') {\r\n      this.newData = { StudentId: 0, CourseId: 0, Id: 0 };\r\n    } else if (type === 'Students') {\r\n      this.newData = { Id: 0, Name: '', Age: 0 };\r\n    }\r\n\r\n    this.apiService.getData(type).subscribe(data => this.data = data);\r\n  }\r\n\r\n  onAddData(): void {\r\n    console.log('Adding data:', this.newData);\r\n\r\n    this.apiService.addData(this.selectedType, this.newData).subscribe(\r\n      data => {\r\n        console.log('Response from API:', data);\r\n        this.data = data;  // Asigură-te că această linie este apelată și că data este actualizată corect\r\n      },\r\n      error => {\r\n        console.error('Error from API:', error);\r\n      }\r\n    );\r\n\r\n    this.newData = {};\r\n  }\r\n  onDeleteData(type: string, id: number): void {\r\n    console.log(`Deleting ${type} with ID: ${id}`);\r\n\r\n    this.apiService.deleteData(type, id).subscribe(\r\n      data => {\r\n        console.log('Response from API:', data);\r\n        this.data = data;  // Asigură-te că această linie este apelată și că data este actualizată corect\r\n      },\r\n      error => {\r\n        console.error('Error from API:', error);\r\n      }\r\n    );\r\n  }\r\n  // Metoda pentru a obține numele proprietăților obiectului newData\r\n  getProperties(obj: any): string[] {\r\n    return obj ? Object.keys(obj) : [];\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}