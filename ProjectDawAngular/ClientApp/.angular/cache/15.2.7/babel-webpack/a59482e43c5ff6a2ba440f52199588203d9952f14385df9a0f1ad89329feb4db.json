{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AfisareCreareDateComponent = class AfisareCreareDateComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.data = [];\n    this.newData = {};\n    this.newData = {};\n  }\n  onSelectType(type) {\n    this.selectedType = type;\n    // Inițializează obiectul newData cu proprietățile specifice tipului selectat\n    if (type === 'Courses') {\n      this.newData = {\n        Id: 0,\n        Title: '',\n        Credits: 0,\n        ProfessorId: 0\n      }; // Use numeric values for numeric properties\n    } else if (type === 'Departments') {\n      this.newData = {\n        Id: 0,\n        Name: '',\n        Location: ''\n      }; // Corrected properties for Departments\n    } else if (type === 'ProfessorDetails') {\n      this.newData = {\n        Id: 0,\n        OfficeLocation: '',\n        ProfessorId: 0\n      };\n    } else if (type === 'Professors') {\n      this.newData = {\n        Id: 0,\n        Name: '',\n        DepartmentId: 0\n      };\n    } else if (type === 'StudentCourses') {\n      this.newData = {\n        StudentId: 0,\n        CourseId: 0,\n        Id: 0\n      };\n    } else if (type === 'Students') {\n      this.newData = {\n        Id: 0,\n        Name: '',\n        Age: 0\n      };\n    }\n    this.apiService.getData(type).subscribe(data => this.data = data);\n  }\n  onAddData() {\n    console.log('Adding data:', this.newData);\n    this.apiService.addData(this.selectedType, this.newData).subscribe(data => {\n      console.log('Response from API:', data);\n      this.data = data; // Asigură-te că această linie este apelată și că data este actualizată corect\n    }, error => {\n      console.error('Error from API:', error);\n    });\n    this.newData = {};\n  }\n  // Metoda pentru a obține numele proprietăților obiectului newData\n  getProperties(obj) {\n    return obj ? Object.keys(obj) : [];\n  }\n};\nAfisareCreareDateComponent = __decorate([Component({\n  selector: 'app-afisare-creare-date',\n  templateUrl: './afisare-creare-date.component.html',\n  styleUrls: ['./afisare-creare-date.component.css']\n})], AfisareCreareDateComponent);\nexport { AfisareCreareDateComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAKrCC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAH9B,SAAI,GAAU,EAAE;IAChB,YAAO,GAAQ,EAAE;IAGf,IAAI,CAACC,OAAO,GAAG,EAAE;EACnB;EAEAC,YAAY,CAACC,IAAY;IACvB,IAAI,CAACC,YAAY,GAAGD,IAAI;IAExB;IACA,IAAIA,IAAI,KAAK,SAAS,EAAE;MACtB,IAAI,CAACF,OAAO,GAAG;QAAEI,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,WAAW,EAAE;MAAC,CAAE,CAAC,CAAC;KAClE,MAAM,IAAIL,IAAI,KAAK,aAAa,EAAE;MACjC,IAAI,CAACF,OAAO,GAAG;QAAEI,EAAE,EAAE,CAAC;QAAEI,IAAI,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAE,CAAE,CAAC,CAAC;KACnD,MAAM,IAAIP,IAAI,KAAK,kBAAkB,EAAE;MACtC,IAAI,CAACF,OAAO,GAAG;QAAEI,EAAE,EAAE,CAAC;QAAEM,cAAc,EAAE,EAAE;QAAEH,WAAW,EAAE;MAAC,CAAE;KAC7D,MAAM,IAAIL,IAAI,KAAK,YAAY,EAAE;MAChC,IAAI,CAACF,OAAO,GAAG;QAAEI,EAAE,EAAE,CAAC;QAAEI,IAAI,EAAE,EAAE;QAAEG,YAAY,EAAE;MAAC,CAAE;KACpD,MAAM,IAAIT,IAAI,KAAK,gBAAgB,EAAE;MACpC,IAAI,CAACF,OAAO,GAAG;QAAEY,SAAS,EAAE,CAAC;QAAEC,QAAQ,EAAE,CAAC;QAAET,EAAE,EAAE;MAAC,CAAE;KACpD,MAAM,IAAIF,IAAI,KAAK,UAAU,EAAE;MAC9B,IAAI,CAACF,OAAO,GAAG;QAAEI,EAAE,EAAE,CAAC;QAAEI,IAAI,EAAE,EAAE;QAAEM,GAAG,EAAE;MAAC,CAAE;;IAG5C,IAAI,CAACf,UAAU,CAACgB,OAAO,CAACb,IAAI,CAAC,CAACc,SAAS,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,GAAGA,IAAI,CAAC;EACnE;EAEAC,SAAS;IACPC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACpB,OAAO,CAAC;IAEzC,IAAI,CAACD,UAAU,CAACsB,OAAO,CAAC,IAAI,CAAClB,YAAY,EAAE,IAAI,CAACH,OAAO,CAAC,CAACgB,SAAS,CAChEC,IAAI,IAAG;MACLE,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAAC;MACvC,IAAI,CAACA,IAAI,GAAGA,IAAI,CAAC,CAAE;IACrB,CAAC,EACDK,KAAK,IAAG;MACNH,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACzC,CAAC,CACF;IAED,IAAI,CAACtB,OAAO,GAAG,EAAE;EACnB;EAEA;EACAuB,aAAa,CAACC,GAAQ;IACpB,OAAOA,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,GAAG,EAAE;EACpC;CACD;AAlDY3B,0BAA0B,eALtCD,SAAS,CAAC;EACT+B,QAAQ,EAAE,yBAAyB;EACnCC,WAAW,EAAE,sCAAsC;EACnDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,GACWhC,0BAA0B,CAkDtC;SAlDYA,0BAA0B","names":["Component","AfisareCreareDateComponent","constructor","apiService","newData","onSelectType","type","selectedType","Id","Title","Credits","ProfessorId","Name","Location","OfficeLocation","DepartmentId","StudentId","CourseId","Age","getData","subscribe","data","onAddData","console","log","addData","error","getProperties","obj","Object","keys","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\proiectDAW\\ProjectDawAngular-part3-2\\ProjectDawAngular\\ProjectDawAngular\\ClientApp\\src\\app\\afisare-creare-date\\afisare-creare-date.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ApiService } from 'src/app/core/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-afisare-creare-date',\r\n  templateUrl: './afisare-creare-date.component.html',\r\n  styleUrls: ['./afisare-creare-date.component.css']\r\n})\r\nexport class AfisareCreareDateComponent {\r\n  selectedType!: string;\r\n  data: any[] = [];\r\n  newData: any = {};\r\n\r\n  constructor(private apiService: ApiService) {\r\n    this.newData = {};\r\n  }\r\n\r\n  onSelectType(type: string): void {\r\n    this.selectedType = type;\r\n\r\n    // Inițializează obiectul newData cu proprietățile specifice tipului selectat\r\n    if (type === 'Courses') {\r\n      this.newData = { Id: 0, Title: '', Credits: 0, ProfessorId: 0 }; // Use numeric values for numeric properties\r\n    } else if (type === 'Departments') {\r\n      this.newData = { Id: 0, Name: '', Location: '' }; // Corrected properties for Departments\r\n    } else if (type === 'ProfessorDetails') {\r\n      this.newData = { Id: 0, OfficeLocation: '', ProfessorId: 0 };\r\n    } else if (type === 'Professors') {\r\n      this.newData = { Id: 0, Name: '', DepartmentId: 0 };\r\n    } else if (type === 'StudentCourses') {\r\n      this.newData = { StudentId: 0, CourseId: 0, Id: 0 };\r\n    } else if (type === 'Students') {\r\n      this.newData = { Id: 0, Name: '', Age: 0 };\r\n    }\r\n\r\n    this.apiService.getData(type).subscribe(data => this.data = data);\r\n  }\r\n\r\n  onAddData(): void {\r\n    console.log('Adding data:', this.newData);\r\n\r\n    this.apiService.addData(this.selectedType, this.newData).subscribe(\r\n      data => {\r\n        console.log('Response from API:', data);\r\n        this.data = data;  // Asigură-te că această linie este apelată și că data este actualizată corect\r\n      },\r\n      error => {\r\n        console.error('Error from API:', error);\r\n      }\r\n    );\r\n\r\n    this.newData = {};\r\n  }\r\n\r\n  // Metoda pentru a obține numele proprietăților obiectului newData\r\n  getProperties(obj: any): string[] {\r\n    return obj ? Object.keys(obj) : [];\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}